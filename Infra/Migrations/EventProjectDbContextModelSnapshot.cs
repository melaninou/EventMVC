// <auto-generated />
using System;
using Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(EventProjectDbContext))]
    partial class EventProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.AttendingDbRecord", b =>
                {
                    b.Property<string>("EventID");

                    b.Property<string>("ProfileID");

                    b.HasKey("EventID", "ProfileID");

                    b.HasIndex("ProfileID");

                    b.ToTable("EventProfile");
                });

            modelBuilder.Entity("Data.Comment.CommentDbRecord", b =>
                {
                    b.Property<string>("EventID");

                    b.Property<string>("CommentID");

                    b.HasKey("EventID", "CommentID");

                    b.HasIndex("CommentID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Data.Comment.CommentsProfileDbRecord", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CommentAddTime");

                    b.Property<string>("CommentText");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("ProfileID");

                    b.Property<string>("ProfilesID");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPicture");

                    b.HasKey("ID");

                    b.HasIndex("ProfilesID");

                    b.ToTable("CommentsProfile");
                });

            modelBuilder.Entity("Data.EventDbRecord", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("EventImage");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Organizer");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Data.ProfileDbRecord", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AboutText");

                    b.Property<DateTime>("BirthDay");

                    b.Property<int>("Gender");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Occupation");

                    b.Property<string>("ProfileImage");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Data.AttendingDbRecord", b =>
                {
                    b.HasOne("Data.EventDbRecord", "Events")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.ProfileDbRecord", "Profiles")
                        .WithMany()
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Comment.CommentDbRecord", b =>
                {
                    b.HasOne("Data.Comment.CommentsProfileDbRecord", "CommentsProfile")
                        .WithMany()
                        .HasForeignKey("CommentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.EventDbRecord", "Events")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Comment.CommentsProfileDbRecord", b =>
                {
                    b.HasOne("Data.ProfileDbRecord", "Profiles")
                        .WithMany()
                        .HasForeignKey("ProfilesID");
                });
#pragma warning restore 612, 618
        }
    }
}
